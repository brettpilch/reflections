How did viewing a diff between two versions of a file help you see the bug that was introduced?
It pointed out the exact location of the differences so that I didn't have to search the whole file.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
It would make it more efficient to revert to a previous version of a program that worked better.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?
pro: you can choose the most logical points at which to make a commit.
con: you might be forgetful and go a long time without making any commits.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Google Docs is used more for stand-alone documents that are unrelated to each other, so there is no need for multiple-file commits.
Desktop version control systems are more likely to be used for programming files which tend to be more interrelated.

How can you use the commands git log and git diff to view the history of files?
Use git log to see the history of commits that were made.
Use git diff to see the difference between two different commits

How might using version control make you more confident to make changes that could break something?
More confident because I know I can always revert to a previous version if I break something.

Now that you have your workspace set up, what do you want to try using Git for?
Make badass programs without fucking up.
